package mop;

import java.io.*;
import com.runtimeverification.rvmonitor.java.rt.RVMLogging;
import com.runtimeverification.rvmonitor.java.rt.RVMLogging.Level;

/**
 * Flushes OutputStream before using the underlying ByteArrayOutputStream.
 *
 * When an OutputStream (or its subclass) instance is built on top of an
 * underlying ByteArrayOutputStream instance, it should be flushed or closed
 * before the underlying instance's toByteArray() is invoked. Failing to
 * fulfill this requirement may cause toByteArray() to return incomplete
 * contents.
 *
 * @severity warning
 */
ByteArrayOutputStream_FlushBeforeRetrieve(ByteArrayOutputStream b, OutputStream o) {
    creation event outputstreaminit after(ByteArrayOutputStream b) returning(OutputStream o) :
        call(OutputStream+.new(..)) && args(b, ..) {
        // Put in Java code here! Might want to prepend for being able to grep
        // This will be faster than writing out to a separate file
        // This is not capturing the name of the monitor
        // W/ the parametric monitoring, need the name as well (hashcode bit)
        System.out.println("AVH:outputstreaminit" + System.identityHashCode(this));
    }
    event write before(OutputStream o) : call(* OutputStream+.write*(..)) && target(o) {
        System.out.println("AVH:write" + System.identityHashCode(this));
    }
    event flush before(OutputStream o) : call(* OutputStream+.flush(..)) && target(o) {
        System.out.println("AVH:flush" + System.identityHashCode(this));
    }
    event close before(OutputStream o) : call(* OutputStream+.close(..)) && target(o) {
        System.out.println("AVH:close" + System.identityHashCode(this));
    }
    event tobytearray before(ByteArrayOutputStream b) :
        call(* ByteArrayOutputStream+.toByteArray(..)) && target(b) {
            System.out.println("AVH:tobytearray" + System.identityHashCode(this));
        }
    event tostring before(ByteArrayOutputStream b) :
        call(* ByteArrayOutputStream+.toString(..)) && target(b) {
            System.out.println("AVH:tostring" + System.identityHashCode(this));
        }

    fsm :
        initial [
            outputstreaminit -> outputstreamcreated
        ]
        outputstreamcreated [
            write -> writing
            flush -> flushed
            close -> closed
        ]
        writing [
            write -> writing
            flush -> flushed
            close -> closed
        ]
        flushed [
            flush -> flushed
            write -> writing
            tobytearray -> flushed
            tostring -> flushed
            close -> closed
        ]
        closed [
            tobytearray -> closed
            tostring -> closed
        ]

    @fail {
        RVMLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
        RVMLogging.out.println(Level.CRITICAL, "flush() or close() should be invoked before toByteArray() or toString() to get the complete contents." + __LOC);
    }
}

